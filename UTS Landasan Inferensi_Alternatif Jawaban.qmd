---
title: "STAT503 Metode Statistik"
subtitle: "Ujian Tengah Semester (UTS): Landasan Inferensi"
format:
  pdf:
    number-sections: true
    papersize: a4
    geometry: 
      - top = 30mm
      - left = 30mm
      - bottom = 30mm
      - right = 30mm
crossref: 
  fig-title: Gambar
  fig-prefix: Gambar
  tbl-title: Tabel
  tbl-prefix: Tabel
  sec-prefix: Bagian
---

```{r}
#| label: pengaturan
#| message: false

library(tidyverse)   # <1>
library(infer)       # <2>
library(knitr)       # <3>
library(kableExtra)  # <4>
```

1.  Metapaket yang memuat paket {dplyr} dan {ggplot2} yang dalam dokumen ini secara berturut-turut digunakan untuk mengolah data dan membuat diagram-diagram statistik.
2.  Paket yang digunakan untuk melakukan inferensi dengan metode simulasi.
3.  Dalam dokumen ini, paket {knitr} digunakan untuk membuat tabel sederhana.
4.  Paket yang digunakan untuk mengatur tampilan tabel.

# Soal: Video di Luar Ruangan

Misalkan kalian ingin mengestimasi proporsi video-video Youtube yang pengambilan gambarnya (sebagian atau keseluruhan) dilakukan di luar ruangan. Kalian memilih sampel acak yang terdiri dari 154 video Youtube dan kalian memperoleh 45 video yang pengambilan gambarnya dilakukan di luar ruangan.

Buatlah sebuah selang kepercayaan 95% untuk mengestimasi persentase video-video Youtube yang pengambilan gambarnya dilakukan di luar ruangan!

------------------------------------------------------------------------

# Jawaban

Permasalahan yang diberikan akan diselesaikan melalui lima tahapan. Tahapan-tahapan tersebut dipaparkan sebagai berikut.

## Mengklarifikasi Pertanyaan

Pertanyaan berikut ini akan dijawab dalam artikel ini.

> Berapakah persentase video-video di Youtube yang pengambilan gambarnya dilakukan di luar ruangan?

## Mempersiapkan dan Mengeksplorasi Data

Berdasarkan informasi dalam soal, kita buat data `sampel_videoYt` dengan menggunakan kode berikut.

```{r}
#| label: data-sampel

sampel_videoYt <- data.frame(         # <1>
  id = 1:154,                         # <2>
  LuarRuangan = c(rep("Ya", 45),      # <3>
                  rep("Tidak", 109))  # <4>
  )                                   # <4>
```

1.  Membuat objek `sampel_videoYt` yang merupakan dataframe,
2.  yang memiliki variabel pertama bernama `id` yang isinya bilangan bulat terurut dari 1 sampai 154,
3.  dan variabel kedua bernama `LuarRuangan` yang berisi "Ya" sebanyak 45 dan "Tidak" sebanyak 109.

@tbl-sampel-videoYt menyajikan beberapa baris (lima baris paling atas dan paling bawah) dalam data `sampel_videoYt`.

```{r}
#| label: tbl-sampel-videoYt
#| tbl-cap: Beberapa baris dalam data `sampel_videoYt`.

sampel_videoYt %>%                                   # <1>
  slice(c(1:5, 150:154)) %>%                         # <2>
  kbl(linesep = "",                                  # <3>
      booktabs = TRUE) %>%                           # <3>
  kable_styling(bootstrap_options = c("striped",     # <4>
                                      "condensed"),  # <4>
                latex_options = c("striped",         # <4>
                                  "condensed"),      # <4>
                full_width = FALSE)                  # <4>
```

1.  Memanggil objek `sampel_videoYt`, dan kemudian
2.  dipilih baris-barisnya yang memiliki indeks 1 sampai 5 dan 150 sampai 154, dan kemudian
3.  hasilnya dibuat tabel sederhana, dan kemudian
4.  tabel hasilnya diatur agar berjalur dan ringkas, serta lebarnya tidak penuh.

Visualisasi yang menunjukkan rasio video-video Youtube yang gambarnya diambil di luar ruangan ditunjukkan pada @fig-vis-video-yt.

```{r}
#| label: fig-vis-video-yt
#| echo: false
#| fig-cap: Visualisasi rasio video-video Youtube yang pengambilan gambarnya di luar ruangan atau tidak.
#| fig-asp: 0.5625

sampel_videoYt %>%
  ggplot(aes(y = factor(1), fill = LuarRuangan)) +
  geom_bar() +
  scale_x_continuous(breaks = seq(from = 0,
                                  to = 154,
                                  by = ((154 - 0) / 4)),
                     labels = scales::percent_format(scale = 100/154)) +
  theme_bw() +
  scale_fill_brewer(palette = "Dark2") +
  theme(axis.title = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "bottom")
```

## Memodelkan Variabilitas Statistik

Untuk memodelkan variabilitas statistik-statistiknya dengan menggunakan metode bootstrap, pertama kita buat distribusi bootstrapnya dengan melakukan 10000 simulasi.

```{r}
#| label: dist-boot-yt-luar
#| echo: false

dist_boot_videoYt <- sampel_videoYt %>% # <1>
  specify(response = LuarRuangan,       # <2>
          success = "Ya") %>%           # <2>
  generate(reps = 10000,                # <3>
           type = "bootstrap") %>%      # <3>
  calculate(stat = "prop")              # <4>
```

1.  Membuat sebuah objek `dist_boot_videoYt` yang menyimpan hasil pemanggilan objek `sampel_videoYt`, dan kemudian
2.  dilakukan spesifikasi dengan variabel respon (variabel terikat) `LuarRuangan` dan suksesnya ketika mendapatkan "Ya", dan kemudian
3.  hasilnya digunakan untuk membuat 10000 sampel berjenis bootstrap, dan kemudian
4.  hasil sampel-sampelnya dihitung proporsinya.

@fig-dist-boot-yt-luar menunjukkan visualisasi distribusi bootstrap dan distribusi sampling dari model matematisnya.

```{r}
#| label: fig-dist-boot-yt-luar
#| fig-cap: Visualisasi distribusi sampling hasil simulasi bootstrap dan model matematis kurva normal
#| fig-asp: 0.5625

mu <- 45/154               # <1>
SE <- sqrt(mu*(1-mu)/154)  # <2>

dist_boot_videoYt %>%      # <3>
  ggplot(aes(x = stat)) +  # <4>
  geom_histogram(aes(y = after_stat(density)),
                 binwidth = 0.02,
                 col = "white") +
  stat_function(fun = dnorm,
                args = list(mean = mu, sd = SE),
                linewidth = 1) +
  theme_bw() +
  theme(axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
```

1.  Menghitung proporsi suksesnya, yaitu $\hat{p}$.
2.  Menghitung pias galat atau $SE$ dengan rumus $SE=\sqrt{\frac{\hat{p}(1-\hat{p})}{n}}$.
3.  Memanggil objek `dist_boot_videoYt`, dan kemudian
4.  hasilnya dijadikan data untuk membuat diagram statistik yang berupa histogram dan kurva normal.

## Membuat Selang Kepercayaan

Selang kepercayaannya akan dibuat dengan menggunakan dua metode, yaitu metode bootstrap dan model matematis yang didasarkan pada distribusi normal.

### Metode Bootstrap

Ujung-ujung selang kepercayaan persentil 95% dapat ditentukan dengan kode berikut.

```{r}
sk_persentil <- dist_boot_videoYt %>%        # <1>
  get_ci(level = .95)                        # <2>
sk_bawah <- as.numeric(sk_persentil[1, "lower_ci"])   # <3>
sk_atas <- as.numeric(sk_persentil[1, "upper_ci"])    # <4>
print(sk_persentil)                          # <5>
```

1.  Membuat objek `sk_persentil` yang digunakan untuk menyimpan hasil dari pemanggilan objek `dist_boot_videoYt`, dan kemudian
2.  hasilnya digunakan untuk membuat selangk kepercayaan dengan tingkat kepercayaan 95%.
3.  Membuat objek `sk_bawah` yang merupakan nilai dari baris pertama dan kolom `lower_ci` dari `sk_persentil` agar hasilnya dapat digunakan lagi.
4.  Membuat objek `sk_atas` yang merupakan nilai dari baris pertama dan kolom `upper_ci` dari `sk_persentil` agar hasilnya dapat digunakan lagi.

Jadi, selang kepercayaan 95% yang kita peroleh dari metode bootstrap adalah (`r round(sk_bawah * 100, 2)`%, `r round(sk_atas * 100, 2)`%). Selang kepercayaan tersebut divisualisasikan pada @fig-sk-dist_boot.

```{r}
#| label: fig-sk-dist_boot
#| fig-cap: Visualisasi selang kepercayaan persentil 95% yang diperoleh dari metode bootstrap.
#| fig-asp: 0.5625

visualise(dist_boot_videoYt) +                         # <1>
  shade_confidence_interval(endpoints = sk_persentil,  # <2>
                            color = "#1b9e77") +       # <2>
  theme_bw() +
  theme(title = element_blank())
```

1.  Memvisualisasikan `dist_boot_videoYt` dan ditambah dengan
2.  arsiran selang kepercayaan yang ujung-ujungnya diambil dari objek `sk_persentil` dan warnanya #1b9e77.

### Metode Kurva Normal

Ujung-ujung selang kepercayaan 95% berdasarkan model matematis distribusi normal dapat ditentukan dengan kode berikut.

```{r}
z_bintang <- qnorm(0.975, mean = 0,           # <1>
                   sd = 1, lower.tail = TRUE) # <1>
pias_galat <- z_bintang * SE                  # <2>
sk_bawah_matematis <- mu - pias_galat         # <3>
sk_atas_matematis <- mu + pias_galat          # <4>
sk_matematis <- tibble(                       # <5>
  batas_bawah = sk_bawah_matematis,           # <5>
  batas_atas = sk_atas_matematis)             # <5>
print(sk_matematis)                           # <6>
```

1.  Menghitung $z^\star$ dan menyimpan nilainya ke dalam objek `z_bintang`.

2.  Menentukan pias galat dengan rumus $z^\star\cdot SE$.

3.  Menentukan batas bawah selang kepercayaan, yaitu $\hat{p} - z^\star\cdot SE$.

4.  Menentukan batas atas selang kepercayaan, yaitu yaitu $\hat{p} + z^\star\cdot SE$.

5.  Membuat sebuah data untuk menyimpan batas-batas selang kepercayaan. Data tersebut dinamai dengan `sk_matematis`.

6.  Menampilkan `sk_matematis`.

Dengan demikian, selang kepercayaan yang kita peroleh adalah (`r round(sk_bawah_matematis *100, 2)`%, `r round(sk_atas_matematis * 100, 2)`%).

## Membuat Kesimpulan

Jadi, kita 95% yakin bahwa persentase video-video Youtube yang pengambilan gambarnya dilakukan di luar ruangan adalah (`r round(sk_bawah * 100, 2)`%, `r round(sk_atas * 100, 2)`%) berdasarkan model bootstrap atau (`r round(sk_bawah_matematis * 100, 2)`%, `r round(sk_atas_matematis * 100, 2)`%) berdasarkan model matematis distribusi normal.
